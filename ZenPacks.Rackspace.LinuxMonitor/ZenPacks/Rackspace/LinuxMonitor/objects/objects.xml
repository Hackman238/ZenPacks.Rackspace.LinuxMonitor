<?xml version="1.0"?>
<objects>
<!-- ('', 'zport', 'dmd', 'Devices', 'Server', 'Linux', 'rrdTemplates', 'Device') -->
<object id='/zport/dmd/Devices/Server/Linux/rrdTemplates/Device' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property id='zendoc' type='string'>
Net-SNMP template for late vintage unix device.  Has CPU threshold.
</property>
<property type="text" id="description" mode="w" >
Net-SNMP template for late vintage unix device.  Has CPU threshold.
</property>
<property type="string" id="targetPythonClass" mode="w" >
Products.ZenModel.Device
</property>
<tomanycont id='datasources'>
<object id='calcFreeMemory' module='ZenPacks.zenoss.CalculatedPerformance.datasources.CalculatedPerformanceDataSource' class='CalculatedPerformanceDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Calculated Performance
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Perf/Snmp/availMemory
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
Auto
</property>
<property type="string" id="expression" mode="w" >
((memAvailReal + memCached) - memBuffer) *1024
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<tomanycont id='datapoints'>
<object id='calcFreeMemory' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='laLoadInt5' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Net-SNMP template for late vintage unix device.  Has CPU threshold.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
SNMP
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="int" id="cycletime" mode="w" >
300
</property>
<property type="string" id="oid" mode="w" >
1.3.6.1.4.1.2021.10.1.5.2
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
Auto
</property>
<tomanycont id='datapoints'>
<object id='laLoadInt5' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Net-SNMP template for late vintage unix device.  Has CPU threshold.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
Net-SNMP template for late vintage unix device.  Has CPU threshold.
</property>
<tomanycont id='aliases'>
<object id='loadAverage5min' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
<property type="string" id="formula" mode="w" >
100,/
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<object id='memAvailReal' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Net-SNMP template for late vintage unix device.  Has CPU threshold.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
SNMP
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="int" id="cycletime" mode="w" >
300
</property>
<property type="string" id="oid" mode="w" >
1.3.6.1.4.1.2021.4.6.0
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
Auto
</property>
<tomanycont id='datapoints'>
<object id='memAvailReal' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Net-SNMP template for late vintage unix device.  Has CPU threshold.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
Net-SNMP template for late vintage unix device.  Has CPU threshold.
</property>
</object>
</tomanycont>
</object>
<object id='memAvailSwap' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Net-SNMP template for late vintage unix device.  Has CPU threshold.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
SNMP
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="int" id="cycletime" mode="w" >
300
</property>
<property type="string" id="oid" mode="w" >
1.3.6.1.4.1.2021.4.4.0
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
Auto
</property>
<tomanycont id='datapoints'>
<object id='memAvailSwap' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Net-SNMP template for late vintage unix device.  Has CPU threshold.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
Net-SNMP template for late vintage unix device.  Has CPU threshold.
</property>
</object>
</tomanycont>
</object>
<object id='memBuffer' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Net-SNMP template for late vintage unix device.  Has CPU threshold.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
SNMP
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="int" id="cycletime" mode="w" >
300
</property>
<property type="string" id="oid" mode="w" >
.1.3.6.1.4.1.2021.4.14.0
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
Auto
</property>
<tomanycont id='datapoints'>
<object id='memBuffer' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Net-SNMP template for late vintage unix device.  Has CPU threshold.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
Net-SNMP template for late vintage unix device.  Has CPU threshold.
</property>
</object>
</tomanycont>
</object>
<object id='memCached' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Net-SNMP template for late vintage unix device.  Has CPU threshold.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
SNMP
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="int" id="cycletime" mode="w" >
300
</property>
<property type="string" id="oid" mode="w" >
.1.3.6.1.4.1.2021.4.15.0
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
Auto
</property>
<tomanycont id='datapoints'>
<object id='memCached' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Net-SNMP template for late vintage unix device.  Has CPU threshold.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
Net-SNMP template for late vintage unix device.  Has CPU threshold.
</property>
</object>
</tomanycont>
</object>
<object id='ssCpuRawIdle' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Net-SNMP template for late vintage unix device.  Has CPU threshold.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
SNMP
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="int" id="cycletime" mode="w" >
300
</property>
<property type="string" id="oid" mode="w" >
1.3.6.1.4.1.2021.11.53.0
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
Auto
</property>
<tomanycont id='datapoints'>
<object id='ssCpuRawIdle' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Net-SNMP template for late vintage unix device.  Has CPU threshold.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
DERIVE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
<property type="string" id="description" mode="w" >
Net-SNMP template for late vintage unix device.  Has CPU threshold.
</property>
<tomanycont id='aliases'>
<object id='cpu__pct' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
<property type="string" id="formula" mode="w" >
__EVAL:str(len(here.hw.cpus())) + ',/,100,EXC,-,0,MAX'
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<object id='ssCpuRawSystem' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Net-SNMP template for late vintage unix device.  Has CPU threshold.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
SNMP
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="int" id="cycletime" mode="w" >
300
</property>
<property type="string" id="oid" mode="w" >
1.3.6.1.4.1.2021.11.52.0
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
Auto
</property>
<tomanycont id='datapoints'>
<object id='ssCpuRawSystem' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Net-SNMP template for late vintage unix device.  Has CPU threshold.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
DERIVE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
<property type="string" id="description" mode="w" >
Net-SNMP template for late vintage unix device.  Has CPU threshold.
</property>
</object>
</tomanycont>
</object>
<object id='ssCpuRawUser' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Net-SNMP template for late vintage unix device.  Has CPU threshold.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
SNMP
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="int" id="cycletime" mode="w" >
300
</property>
<property type="string" id="oid" mode="w" >
1.3.6.1.4.1.2021.11.50.0
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
Auto
</property>
<tomanycont id='datapoints'>
<object id='ssCpuRawUser' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Net-SNMP template for late vintage unix device.  Has CPU threshold.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
DERIVE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
<property type="string" id="description" mode="w" >
Net-SNMP template for late vintage unix device.  Has CPU threshold.
</property>
</object>
</tomanycont>
</object>
<object id='ssCpuRawWait' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Net-SNMP template for late vintage unix device.  Has CPU threshold.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
SNMP
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="int" id="cycletime" mode="w" >
300
</property>
<property type="string" id="oid" mode="w" >
1.3.6.1.4.1.2021.11.54.0
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
Auto
</property>
<tomanycont id='datapoints'>
<object id='ssCpuRawWait' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Net-SNMP template for late vintage unix device.  Has CPU threshold.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
DERIVE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
<property type="string" id="description" mode="w" >
Net-SNMP template for late vintage unix device.  Has CPU threshold.
</property>
</object>
</tomanycont>
</object>
<object id='sysUpTime' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Net-SNMP template for late vintage unix device.  Has CPU threshold.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
SNMP
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="int" id="cycletime" mode="w" >
300
</property>
<property type="string" id="oid" mode="w" >
1.3.6.1.2.1.1.3.0
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
Auto
</property>
<tomanycont id='datapoints'>
<object id='sysUpTime' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Net-SNMP template for late vintage unix device.  Has CPU threshold.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
Net-SNMP template for late vintage unix device.  Has CPU threshold.
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='graphs'>
<object id='CPU Idle' module='Products.ZenModel.RRDGraph' class='RRDGraph'>
<property type="lines" id="dsnames" mode="w" >
['ssCpuRawIdle_ssCpuRawIdle']
</property>
<property type="int" id="sequence" mode="w" >
2
</property>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
percentage
</property>
<property type="int" id="linewidth" mode="w" >
1
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="boolean" id="summary" mode="w" >
True
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="lines" id="colors" mode="w" >
('#00cc00', '#0000ff', '#00ffff', '#ff0000', '#ffff00', '#cc0000', '#0000cc', '#0080c0', '#8080c0', '#ff0080', '#800080', '#0000a0', '#408080', '#808000', '#000000', '#00ff00', '#fb31fb', '#0080ff', '#ff8000', '#800000')
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
</object>
<object id='CPU Utilization' module='Products.ZenModel.RRDGraph' class='RRDGraph'>
<property type="lines" id="dsnames" mode="w" >
['ssCpuRawSystem_ssCpuRawSystem', 'ssCpuRawUser_ssCpuRawUser', 'ssCpuRawWait_ssCpuRawWait']
</property>
<property type="int" id="sequence" mode="w" >
1
</property>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
percentage
</property>
<property type="int" id="linewidth" mode="w" >
1
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="boolean" id="summary" mode="w" >
True
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="lines" id="colors" mode="w" >
('#00cc00', '#0000ff', '#00ffff', '#ff0000', '#ffff00', '#cc0000', '#0000cc', '#0080c0', '#8080c0', '#ff0080', '#800080', '#0000a0', '#408080', '#808000', '#000000', '#00ff00', '#fb31fb', '#0080ff', '#ff8000', '#800000')
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
</object>
<object id='Free Memory' module='Products.ZenModel.RRDGraph' class='RRDGraph'>
<property type="lines" id="dsnames" mode="w" >
['memAvailReal_memAvailReal']
</property>
<property type="int" id="sequence" mode="w" >
4
</property>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
bytes
</property>
<property type="int" id="linewidth" mode="w" >
1
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="boolean" id="summary" mode="w" >
True
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="lines" id="colors" mode="w" >
('#00cc00', '#0000ff', '#00ffff', '#ff0000', '#ffff00', '#cc0000', '#0000cc', '#0080c0', '#8080c0', '#ff0080', '#800080', '#0000a0', '#408080', '#808000', '#000000', '#00ff00', '#fb31fb', '#0080ff', '#ff8000', '#800000')
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
</object>
<object id='Free Swap' module='Products.ZenModel.RRDGraph' class='RRDGraph'>
<property type="lines" id="dsnames" mode="w" >
['memAvailSwap_memAvailSwap']
</property>
<property type="int" id="sequence" mode="w" >
3
</property>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
KBytes
</property>
<property type="int" id="linewidth" mode="w" >
1
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="boolean" id="summary" mode="w" >
True
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="lines" id="colors" mode="w" >
('#00cc00', '#0000ff', '#00ffff', '#ff0000', '#ffff00', '#cc0000', '#0000cc', '#0080c0', '#8080c0', '#ff0080', '#800080', '#0000a0', '#408080', '#808000', '#000000', '#00ff00', '#fb31fb', '#0080ff', '#ff8000', '#800000')
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
</object>
<object id='Load Average' module='Products.ZenModel.RRDGraph' class='RRDGraph'>
<property type="lines" id="dsnames" mode="w" >
['laLoadInt5_laLoadInt5']
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
load
</property>
<property type="int" id="linewidth" mode="w" >
1
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="boolean" id="summary" mode="w" >
True
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="lines" id="colors" mode="w" >
('#00cc00', '#0000ff', '#00ffff', '#ff0000', '#ffff00', '#cc0000', '#0000cc', '#0080c0', '#8080c0', '#ff0080', '#800080', '#0000a0', '#408080', '#808000', '#000000', '#00ff00', '#fb31fb', '#0080ff', '#ff8000', '#800000')
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
</object>
<object id='Load Average 5 min' module='Products.ZenModel.RRDGraph' class='RRDGraph'>
<property type="lines" id="dsnames" mode="w" >
['laLoadInt5_laLoadInt5']
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
processes
</property>
<property type="int" id="linewidth" mode="w" >
1
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="boolean" id="summary" mode="w" >
True
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="lines" id="colors" mode="w" >
('#00cc00', '#0000ff', '#00ffff', '#ff0000', '#ffff00', '#cc0000', '#0000cc', '#0080c0', '#8080c0', '#ff0080', '#800080', '#0000a0', '#408080', '#808000', '#000000', '#00ff00', '#fb31fb', '#0080ff', '#ff8000', '#800000')
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
</object>
</tomanycont>
<tomanycont id='thresholds'>
<object id='highLoad' module='Products.ZenModel.MinMaxThreshold' class='MinMaxThreshold'>
<property label="DataPoints" type="lines" id="dsnames" mode="w" >
['laLoadInt5_laLoadInt5']
</property>
<property label="Enabled" type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="maxval" mode="w" >
here.getCoreCount() * here.getThreadsPerCore() * 100
</property>
<property type="string" id="eventClass" mode="w" >
/Perf/Load
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="int" id="escalateCount" mode="w" >
2
</property>
</object>
<object id='lowFreeMem' module='Products.ZenModel.MinMaxThreshold' class='MinMaxThreshold'>
<property label="DataPoints" type="lines" id="dsnames" mode="w" >
['calcFreeMemory_calcFreeMemory']
</property>
<property label="Enabled" type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="minval" mode="w" >
(here.hw.totalMemory) * here.getFreeMemoryThresholdPercentLimit()
</property>
<property type="string" id="eventClass" mode="w" >
/Perf/Snmp/availMemory
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="int" id="escalateCount" mode="w" >
2
</property>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='CPU Utilization' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
Percent (Cumulative)
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
2
</property>
<tomanycont id='graphPoints'>
<object id='ssCpuRawIdle' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="color" mode="w" >
00FF00
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
2
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%0.1lf%%
</property>
<property type="string" id="legend" mode="w" >
RAW Idle
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
ssCpuRawIdle_ssCpuRawIdle
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='ssCpuRawSystem' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="color" mode="w" >
00FFFF
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
2
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%0.1lf%%
</property>
<property type="string" id="legend" mode="w" >
RAW System
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
ssCpuRawSystem_ssCpuRawSystem
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='ssCpuRawUser' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
2
</property>
<property type="string" id="color" mode="w" >
0000BB
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
2
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%0.1lf%%
</property>
<property type="string" id="legend" mode="w" >
RAW User
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
ssCpuRawUser_ssCpuRawUser
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='ssCpuRawWait' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
3
</property>
<property type="string" id="color" mode="w" >
FF0000
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
2
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%0.1lf%%
</property>
<property type="string" id="legend" mode="w" >
RAW Wait
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
ssCpuRawWait_ssCpuRawWait
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Load Average' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
Load
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
96
</property>
<property type="text" id="custom" mode="w" >
COMMENT: Core count\: ${here/getCoreCount} \\n
COMMENT: Threads per core\: ${here/getThreadsPerCore}
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='highLoad' module='Products.ZenModel.ThresholdGraphPoint' class='ThresholdGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="threshId" mode="w" >
highLoad
</property>
<property type="string" id="legend" mode="w" >
Load maximum (Core count x Threads per Core)
</property>
</object>
<object id='laLoadInt5' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
2
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf
</property>
<property type="string" id="legend" mode="w" >
Load 5m
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
100,/
</property>
<property type="string" id="dpName" mode="w" >
laLoadInt5_laLoadInt5
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Memory' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
Bytes
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
True
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="text" id="custom" mode="w" >
COMMENT: Low memory limit\: ${here/getFreeMemoryThresholdPercentLimitNice}
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
1
</property>
<tomanycont id='graphPoints'>
<object id='calcFreeMemory' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
Free + Cached - Buffers
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
calcFreeMemory_calcFreeMemory
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='lowFreeMem' module='Products.ZenModel.ThresholdGraphPoint' class='ThresholdGraphPoint'>
<property type="long" id="sequence" mode="w" >
5
</property>
<property type="string" id="threshId" mode="w" >
lowFreeMem
</property>
<property type="string" id="legend" mode="w" >
Low Free Memory Limit
</property>
</object>
<object id='memAvailReal' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
2
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
Real
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
1024,*
</property>
<property type="string" id="dpName" mode="w" >
memAvailReal_memAvailReal
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='memAvailSwap' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
4
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
2
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
Swap
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
1024,*
</property>
<property type="string" id="dpName" mode="w" >
memAvailSwap_memAvailSwap
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='memBuffer' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
2
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
2
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
Buffers
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
1024,*
</property>
<property type="string" id="dpName" mode="w" >
memBuffer_memBuffer
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='memCached' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
3
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
2
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
Cached
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
1024,*
</property>
<property type="string" id="dpName" mode="w" >
memCached_memCached
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<!-- ('', 'zport', 'dmd', 'Events', 'Perf', 'Load') -->
<object id='/zport/dmd/Events/Perf/Load' module='Products.ZenEvents.EventClass' class='EventClass'>
<property type="text" id="transform" mode="w" >
import re
if evt.summary.startswith('threshold of highLoad'):
    # Extract the percent and utilization from the summary
    m = re.search("threshold of [^:]+: current value ([\d\.]+)", evt.message)
    currentusage = (float(m.groups()[0])) / 100
    cores = device.getCoreCount()
    threads = device.getThreadsPerCore()
    allowedLoad = cores * threads
    evt.summary = "High Load: %3.2f (max %3.2f - %3.0f cores x %3.2f threads)" %  (currentusage, allowedLoad, cores, threads)
    evt.message = evt.summary
</property>
<property type="text" id="transform" mode="w" >
import re
if evt.summary.startswith('threshold of highLoad'):
    # Extract the percent and utilization from the summary
    m = re.search("threshold of [^:]+: current value ([\d\.]+)", evt.message)
    currentusage = (float(m.groups()[0])) / 100
    cores = device.getCoreCount()
    threads = device.getThreadsPerCore()
    allowedLoad = cores * threads
    evt.summary = "High Load: %3.2f (max %3.2f - %3.0f cores x %3.2f threads)" %  (currentusage, allowedLoad, cores, threads)
    evt.message = evt.summary
</property>
</object>
<!-- ('', 'zport', 'dmd', 'Events', 'Perf', 'Snmp', 'availMemory') -->
<object id='/zport/dmd/Events/Perf/Snmp/availMemory' module='Products.ZenEvents.EventClass' class='EventClass'>
<property type="text" id="transform" mode="w" >
import re
currentusage = 0

# Extract the percent and utilization from the summary
# Validate item and device really exist
if device:
    m = re.search("threshold of lowFreeMem not met: current value ([\d\.]+)", evt.summary)
    currentusage = (float(m.groups()[0]))
    totalMem = device.hw.totalMemory * device.getFreeMemoryThresholdPercentLimit()
    limitThreshPercent = device.getFreeMemoryThresholdPercentLimitNice()

    # Check the speed to determine the appropriate conversion
    # gigabytes
    if  currentusage &gt; 1073741824:
        Usage = currentusage / 1073741824
        Total = totalMem / 1073741824
        evt.summary = "Low Memory: %3.2f GB free (min %3.2f GB or %s)" % (Usage, Total, limitThreshPercent)
        evt.message = evt.summary
    # megabytes
    elif currentusage &gt; 1048576:
        Usage = currentusage / 1048576
        Total = totalMem / 1048576
        evt.summary = "Low Memory: %3.2f MB free (min %3.2f  MB or %s)" % (Usage, Total, limitThreshPercent)
        evt.message = evt.summary
    # kilobyte
    elif currentusage &gt; 1024:
        Usage = currentusage / 1024
        Total = totalMem / 1024
        evt.summary = "Low Memory: %3.2f KB free  (min %3.2f KB or %s)" % (Usage, Total, limitThreshPercent)
        evt.message = evt.summary
    # byte
    elif currentusage &lt; 1024:
        Usage = currentusage
        Total = totalMem
        evt.summary = "Low Memory: %3.2f B free  (min %3.2f B or %s)" % (Usage, Total, limitThreshPercent)
        evt.message = evt.summary
</property>
<property type="text" id="transform" mode="w" >
import re
currentusage = 0

# Extract the percent and utilization from the summary
# Validate item and device really exist
if device:
    m = re.search("threshold of lowFreeMem not met: current value ([\d\.]+)", evt.summary)
    currentusage = (float(m.groups()[0]))
    totalMem = device.hw.totalMemory * device.getFreeMemoryThresholdPercentLimit()
    limitThreshPercent = device.getFreeMemoryThresholdPercentLimitNice()

    # Check the speed to determine the appropriate conversion
    # gigabytes
    if  currentusage &gt; 1073741824:
        Usage = currentusage / 1073741824
        Total = totalMem / 1073741824
        evt.summary = "Low Memory: %3.2f GB free (min %3.2f GB or %s)" % (Usage, Total, limitThreshPercent)
        evt.message = evt.summary
    # megabytes
    elif currentusage &gt; 1048576:
        Usage = currentusage / 1048576
        Total = totalMem / 1048576
        evt.summary = "Low Memory: %3.2f MB free (min %3.2f  MB or %s)" % (Usage, Total, limitThreshPercent)
        evt.message = evt.summary
    # kilobyte
    elif currentusage &gt; 1024:
        Usage = currentusage / 1024
        Total = totalMem / 1024
        evt.summary = "Low Memory: %3.2f KB free  (min %3.2f KB or %s)" % (Usage, Total, limitThreshPercent)
        evt.message = evt.summary
    # byte
    elif currentusage &lt; 1024:
        Usage = currentusage
        Total = totalMem
        evt.summary = "Low Memory: %3.2f B free  (min %3.2f B or %s)" % (Usage, Total, limitThreshPercent)
        evt.message = evt.summary
</property>
</object>
</objects>
